<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 이 XML 매퍼 파일은 GenFile 엔터티와 관련된 SQL 쿼리를 정의합니다. 메타데이터 저장, 다양한 기준으로 파일 검색, 
	파일 메타데이터 업데이트, 파일 삭제에 대한 쿼리가 포함되어 있습니다. -->
<mapper namespace="com.example.demo.repository.GenFileRepository">

	<!-- 새로운 genFile 레코드를 삽입하고 생성된 키를 검색합니다. -->
	<insert id="saveMeta" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO genFile
		SET regDate = NOW(),
		updateDate = NOW(),
		relTypeCode
		= #{relTypeCode},
		relId = #{relId},
		typeCode = #{typeCode},
		type2Code =
		#{type2Code},
		fileNo = #{fileNo},
		originFileName = #{originFileName},
		fileExtTypeCode = #{fileExtTypeCode},
		fileExtType2Code =
		#{fileExtType2Code},
		fileSize = #{fileSize},
		fileDir = #{fileDir},
		fileExt = #{fileExt}
	</insert>

	<!-- 다양한 기준으로 genFile 레코드를 검색합니다. -->
	<select id="getGenFile" resultType="GenFile">
		SELECT *
		FROM genFile
		WHERE 1
		<if test="relTypeCode != null">
			AND relTypeCode = #{relTypeCode}
		</if>
		<if test="relId != null">
			AND relId = #{relId}
		</if>
		<if test="typeCode != null">
			AND typeCode = #{typeCode}
		</if>
		<if test="type2Code != null">
			AND type2Code = #{type2Code}
		</if>
		<if test="fileNo != null">
			AND fileNo = #{fileNo}
		</if>
	</select>

	<!-- ID로 genFile 레코드를 검색합니다. -->
	<select id="getGenFileById" resultType="GenFile">
		SELECT *
		FROM genFile
		WHERE 1
		AND id = #{id}
	</select>

	<!-- 특정 기준으로 genFile 레코드를 검색합니다. -->
	<select id="getGenFiles" resultType="GenFile">
		SELECT *
		FROM genFile
		WHERE 1
		AND relTypeCode = #{relTypeCode}
		AND relId =
		#{relId}
		<if test="typeCode != null">
			AND typeCode = #{typeCode}
		</if>
		<if test="type2Code != null">
			AND type2Code = #{type2Code}
		</if>
		ORDER BY typeCode, type2Code, fileNo
	</select>

	<!-- 관계 유형 코드와 관계 ID로 genFile 레코드를 검색합니다. -->
	<select id="getGenFilesByRelTypeCodeAndRelId"
		resultType="GenFile">
		SELECT *
		FROM genFile
		WHERE 1
		AND relTypeCode = #{relTypeCode}
		AND relId = #{relId}
		ORDER BY typeCode, type2Code, fileNo
	</select>

	<!-- 관계 유형 코드, 관계 ID, 유형 코드 및 유형 2 코드별로 genFile 레코드를 검색합니다. -->
	<select
		id="getGenFilesRelTypeCodeAndRelIdsAndTypeCodeAndType2Code"
		resultType="GenFile">
		SELECT *
		FROM genFile
		WHERE 1
		<if test="relIds != null and relIds.size > 0">
			AND relId IN
			<foreach item="relId" index="index" collection="relIds"
				open="(" separator="," close=")">
				#{relId}
			</foreach>
		</if>
		AND relTypeCode = #{relTypeCode}
		AND typeCode = #{typeCode}
		AND
		type2Code = #{type2Code}
		ORDER BY relId, fileNo
	</select>

	<!-- genFile 레코드의 relId를 업데이트합니다. -->
	<update id="changeRelId">
		UPDATE genFile
		<set>
			updateDate = NOW(),
			relId = #{relId}
		</set>
		WHERE id = #{id}
	</update>

	<!-- 관계 유형 코드와 관계 ID로 genFile 레코드를 삭제합니다. -->
	<delete id="deleteFiles">
		DELETE FROM genFile
		WHERE relTypeCode = #{relTypeCode}
		AND relId = #{relId}
	</delete>

	<!-- ID로 genFile 레코드를 삭제합니다. -->
	<delete id="deleteFile">
		DELETE FROM genFile
		WHERE id = #{id}
	</delete>
</mapper>